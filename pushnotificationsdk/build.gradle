apply plugin: 'com.novoda.bintray-release'
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.jetbrains.dokka-android'

def circleCiTag = System.getenv("CIRCLE_TAG")

def getGitHash = { ->
    def hash = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = hash
    }
    return hash.toString().trim()
}

android {
    compileSdkVersion 27
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 27
        versionCode 1
        versionName circleCiTag ?: getGitHash()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        archivesBaseName = "$archivesBaseName-$versionName"
    }
    buildTypes {

        debug {

        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/sqldelight'
        main.java.srcDirs += 'src/main/samples'
    }

    lintOptions {
        abortOnError false
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

androidExtensions {
    experimental = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api 'com.android.support:appcompat-v7:27.+'
    api 'com.google.firebase:firebase-messaging:10.2.1'

    /* TEST DEPENDENCIES */
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation "io.mockk:mockk:1.8.13.kotlin13"

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.json:json:20140107'
    testImplementation 'org.robolectric:robolectric:4.2'
    testImplementation 'androidx.test:core:1.1.0'
    testImplementation 'androidx.test:runner:1.1.1'
}

task dokkaMarkdown(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'markdown'
    outputDirectory = "$buildDir/docs/markdown"
}

task dokkaHtml(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'html'
    outputDirectory = "$buildDir/docs/html"
}

publish {
    userOrg         = System.getenv("BINTRAY_ORG_ID") ?: ""
    repoName        = System.getenv("BINTRAY_BINTRAY_REPO") ?: ""
    groupId         = System.getenv("BINTRAY_PUBLISHED_GROUP_ID") ?: ""
    artifactId      = System.getenv("BINTRAY_ARTIFACT_ID") ?: ""
    publishVersion  = circleCiTag ?: getGitHash()
    desc            = "Everlytic Push Notifications for Android"
    website         = "https://everlytic.github.io/push-notifications-sdk-android"
    repository      = "https://github.com/everlytic/push-notifications-sdk-android.git"
}